matrix:
  include:
    - name: "erlang static analysis & styling"
      language: erlang
      otp_release: 21.3
      install:
        - bash dev_install.sh
      script:
        - bash .run_dialyzer
        - ./.elvis rock

    - name: "bash static analysis & styling"
      script:
        - shellcheck *.sh

    - name: "erlang x python integration tests & python tests"
      language: erlang
      otp_release: 22.0
      cache:
        pip: true
        apt: true
      before_install:
        - sudo add-apt-repository -y ppa:deadsnakes/ppa
        - sudo apt-get update
        - sudo apt install python3.7
        - curl https://bootstrap.pypa.io/get-pip.py | sudo python3.7
      install:
        - sudo pip3 install -r requirements.txt
      script:
        - ( pytest ) & ( bash compile_and_run.sh )

    - name: "python static analysis"
      language: python
      dist: xenial
      python: 3.7
      cache: pip
      install:
        - pip install -r requirements.txt
        - pip install mypy
      script:
        - mypy wrappers/python3

    - name: "python styling"
      language: python
      dist: xenial
      python: 3.7
      cache: pip
      install:
        - pip install -r requirements.txt
        - pip install black
      script:
        - black --check wrappers/python3

    - name: "python x docker integration tests & python tests"
      language: python
      dist: xenial
      python: 3.7
      addons:
        apt:
          sources:
            - docker-xenial
          packages:
            - docker
      cache: pip
      install:
        - pip install -r requirements.txt
        - pip install pytest pytest-cov codecov
        - docker pull dominicburkart/leoronic
      script:
        - docker run -d -v /var/run/docker.sock:/var/run/docker.sock dominicburkart/leoronic && pytest --cov=./
      after_success:
        - codecov # run other reports: https://docs.codecov.io/docs/merging-reports

    - name: "total lines of code"
      addons:
        apt:
          packages:
            - cloc
      script:
        - cloc .
#    - name: "rust linters"
#      language: rust
#      rust:
#        - stable
#        - beta
#      before_script:
#        - rustup component add clippy
#      script:
#        - cd wrappers/rust && cargo clippy -- -D warnings
#
#    - name: "rust tests"
#      language: rust
#      rust:
#        - stable
#        - beta
#      script:
#        - cd wrappers/rust && cargo test
